-- Query the total population of all cities in CITY where District is California.
-- Input Format
-- The CITY table is described as follows: 

-- SELECT SUM(POPULATION) AS TotalPopulation
-- FROM CITY
-- WHERE DISTRICT = 'California';



-- Query the average population of all cities in CITY where District is California.
-- Input Format
-- The CITY table is described as follows: 

-- SELECT AVG(POPULATION) AS AveragePopulation
-- FROM CITY
-- WHERE DISTRICT = 'California';



-- Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.
-- Input Format
-- The CITY table is described as follows:

-- SELECT SUM(POPULATION) AS TotalPopulation
-- FROM CITY
-- WHERE COUNTRYCODE = 'JPN';



-- Query the difference between the maximum and minimum populations in CITY.
-- Input Format
-- The CITY table is described as follows:

-- SELECT MAX(POPULATION) - MIN(POPULATION) AS PopulationDifference
-- FROM CITY;



-- Query the average population for all cities in CITY, rounded down to the nearest integer.
-- Input Format
-- The CITY table is described as follows:

-- SELECT FLOOR(AVG(POPULATION)) AS avg_population
-- FROM CITY;



-- Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's 0 key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
-- Write a query calculating the amount of error (i.e.: actual-miscalculated  average monthly salaries), and round it up to the next integer.

-- Input Format
-- The EMPLOYEES table is described as follows:

-- Note: Salary is per month.
-- Constraints
-- 1000<Salary<10^5.

-- Sample Input
-- Sample Output
-- 2061


--  SELECT CEIL(ABS(
--      (SELECT AVG(CAST(REPLACE(Salary, '0', '') AS UNSIGNED)) FROM EMPLOYEES) - 
--      (SELECT AVG(Salary) FROM EMPLOYEES)
--  )) AS ErrorAmount;



-- We define an employee's total earnings to be their monthly salary*months  worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. Then print these values as 2 space-separated integers.

-- Input Format
-- The Employee table containing employee data for a company is described as follows:

-- where employee_id is an employee's ID number, name is their name, months is the total number of months they've been working for the company, and salary is the their monthly salary.

-- Sample Input

-- Sample Output
-- 69952 1

-- Explanation
-- The table and earnings data is depicted in the following diagram: 
-- The maximum earnings value is 69952. The only employee with earnings=69952  is Kimberly, so we print the maximum earnings value (69952) and a count of the number of employees who have earned $69952 (which is 1) as two space-separated values.

-- SELECT 
--     MAX(total_earnings) AS max_total_earnings,
--     COUNT(*) AS num_employees_with_max_earnings
-- FROM (
--     SELECT 
--         salary * months AS total_earnings
--     FROM 
--         Employee
-- ) AS Earnings
-- WHERE total_earnings = (
--     SELECT MAX(salary * months)
--     FROM Employee
-- );
