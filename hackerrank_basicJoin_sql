-- -- Given the CITY and COUNTRY tables, query the names of all cities where
-- --  the CONTINENT is 'Africa'.
-- -- Note: CITY.CountryCode and COUNTRY.Code are matching key columns.

-- SELECT CITY.Name
-- FROM CITY
-- JOIN COUNTRY ON CITY.CountryCode = COUNTRY.Code
-- WHERE COUNTRY.Continent = 'Africa';


-- -- Given the CITY and COUNTRY tables, query the names of all the continents (COUNTRY.Continent)
-- --  and their respective average city populations (CITY.Population) rounded down to the nearest integer.
-- -- Note: CITY.CountryCode and COUNTRY.Code are matching key columns.

-- SELECT COUNTRY.Continent, FLOOR(AVG(CITY.Population)) AS avg_city_population
-- FROM CITY
-- JOIN COUNTRY ON CITY.CountryCode = COUNTRY.Code
-- GROUP BY COUNTRY.Continent;



-- -- Given the CITY and COUNTRY tables, query the sum of the populations of all cities
-- --  where the CONTINENT is 'Asia'.
-- -- Note: CITY.CountryCode and COUNTRY.Code are matching key columns.

-- SELECT SUM(CITY.Population) AS total_population
-- FROM CITY
-- JOIN COUNTRY ON CITY.CountryCode = COUNTRY.Code
-- WHERE COUNTRY.Continent = 'Asia';







WITH FullScores AS (
    SELECT
        s.hacker_id,
        h.name,
        COUNT(s.challenge_id) AS full_score_count
    FROM
        Submissions s
        JOIN Challenges c ON s.challenge_id = c.challenge_id
        JOIN Difficulty d ON c.difficulty_level = d.difficulty_level
        JOIN Hackers h ON s.hacker_id = h.hacker_id
    WHERE
        s.score = d.score
    GROUP BY
        s.hacker_id, h.name
    HAVING
        COUNT(s.challenge_id) > 1
)
SELECT
    hacker_id,
    name
FROM
    FullScores
ORDER BY
    full_score_count DESC,
    hacker_id ASC;
